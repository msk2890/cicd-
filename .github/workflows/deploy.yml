name: Deploy Flask App to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9  # Use the desired Python version

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install dependencies listed in requirements.txt

      # Set up SSH access
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cat -r ~/.ssh/id_rsa
        env:
          EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}


      - name: Debug environment variables
        run: |
            echo "EC2_USER: ${{ secrets.EC2_USER }}"
            echo "EC2_IP: ${{ secrets.EC2_IP }}"

      # Copy files to EC2 instance
      - name: Copy files to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -r ./ $ubuntu@63.177.94.185:/home/ubuntu/myapp

      # SSH into EC2 instance and deploy
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} << 'EOF'
            cd /home/${{ secrets.EC2_USER }}/myapp
            # Set up the environment (e.g., virtualenv, install dependencies)
            python -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            # Start the Flask app (this can be adapted to use a production server like Gunicorn)
            nohup python app.py &
          EOF
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_IP: ${{ secrets.EC2_IP }}

